// Main build script
//
// Usage: gradlew assembleDebug           Build debug APK
//        gradlew assembleRelease         Build release APK
//        gradlew test                    Run local unit test
//        gradlew connectedAndroidTest    Run instrumented unit test
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

kapt {
    correctErrorTypes = true // avoid unknown type replacing with NonExistentClass
}

// Last Git tag name on current branch
final GIT_TAG_NAME = "git describe --tags --abbrev=0".execute([], project.rootDir).text.trim()

// Total number of tags in the app
final GIT_TAG_COUNT = "git tag --list".execute([], project.rootDir).text.split("\n").size()

apply from: 'common.gradle'

android {
    compileSdkVersion compile_sdk_version
    buildToolsVersion build_tools_version

    dataBinding.enabled = true

    defaultConfig {
        applicationId "cz.kotox.kotiheating"
        minSdkVersion min_sdk_version
        targetSdkVersion compile_sdk_version
        versionCode GIT_TAG_COUNT
        versionName GIT_TAG_NAME
        aaptOptions.cruncherEnabled false
		resValue "string", "app_name", "KoTiHeat"
        //multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    flavorDimensions "env"
    //https://developer.android.com/studio/build/gradle-plugin-3-0-0-migration.html
    productFlavors {
        localhost {
            dimension = "env"
            applicationIdSuffix ".loc"
            versionNameSuffix "-loc"
            buildConfigField "String", "REST_BASE_URL", "\"http://10.0.2.2:8080/api/\""
            resValue "string", "app_name", "KTH-Loc"
        }
        production {
            dimension = "env"
            buildConfigField "String", "REST_BASE_URL", "\"https://kotopeky.cz/api/\""
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'

        localhost {
            java {
                srcDirs('src/server/kotlin')
            }
        }
        production {
            java {
                srcDirs('src/server/kotlin')
            }
        }
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "LOGS", "true"

            //applicationIdSuffix ".debug"
			signingConfig signingConfigs.debug

            versionNameSuffix "-debug"
            aaptOptions.cruncherEnabled true
            // Disable fabric build ID generation for debug builds
            ext.enableCrashlytics = false
            // Only use this flag on builds you don't proguard or upload to beta-by-crashlytics
            ext.alwaysUpdateBuildId = false
        }


        release {
            buildConfigField "boolean", "LOGS", "true"

            signingConfig signingConfigs.release
            zipAlignEnabled true
            minifyEnabled true
            shrinkResources true

            proguardFile 'proguard-rules/proguard-square-retrofit2.pro'
            proguardFile 'proguard-rules/proguard-square-leakcanary.pro'
            proguardFile 'proguard-rules/proguard-square-okio.pro'
            proguardFile 'proguard-rules/proguard-glide.pro'
            proguardFile 'proguard-rules/proguard-gson.pro'
            proguardFile 'proguard-rules/proguard-square-okhttp3.pro'
            proguardFile 'proguard-rules/proguard-support-design.pro'
            proguardFile 'proguard-rules/proguard-support-v7-appcompat.pro'
            proguardFile 'proguard-rules/proguard-support-v7-cardview.pro'
            proguardFile 'proguard-rules/proguard-realm.pro'
            proguardFile 'proguard-rules/proguard-reactive.pro'
            proguardFile 'proguard-rules/proguard-coroutines.pro'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.all {
            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
                outputs.upToDateWhen {false}
                showStandardStreams = true
            }
        }
    }
}


repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$koroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$koroutines_version"

    //implementation "com.android.support:multidex:$multidex_version"

    // support library
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.gridlayout:gridlayout:1.0.0'

    // Android Arch
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'androidx.room:room-runtime:2.0.0'
    kapt 'androidx.room:room-compiler:2.0.0'

    implementation "com.google.android.gms:play-services-auth:$play_services"

	implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"
	implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"

    // glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    implementation("com.github.bumptech.glide:okhttp3-integration:$glide_version") {
        exclude group: 'glide-parent'
    }
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // retrofit + okhttp + gson
    implementation "com.google.code.gson:gson:$gson_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation("com.squareup.retrofit2:converter-gson:$retrofit_version") {
        transitive = true
        exclude module: 'gson'
    }
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation("com.squareup.retrofit2:retrofit-mock:$retrofit_version") {
        exclude group: 'com.squareup.retrofit2', module: 'retrofit'
    }
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'

    // leakcanary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanary_version"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanary_version"
    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanary_version"

    // Tatarka
    implementation "me.tatarka.bindingcollectionadapter2:bindingcollectionadapter:$tatarka_version"
    implementation "me.tatarka.bindingcollectionadapter2:bindingcollectionadapter-recyclerview:$tatarka_version"


    //Arrow
    implementation "io.arrow-kt:arrow-core:$arrow_version"
    implementation "io.arrow-kt:arrow-syntax:$arrow_version"
    implementation "io.arrow-kt:arrow-typeclasses:$arrow_version"
    implementation "io.arrow-kt:arrow-data:$arrow_version"
    implementation "io.arrow-kt:arrow-instances-core:$arrow_version"
    implementation "io.arrow-kt:arrow-instances-data:$arrow_version"
    kapt    "io.arrow-kt:arrow-annotations-processor:$arrow_version"

    /**
     *  UNIT-TEST UNIT-TEST UNIT-TEST UNIT-TEST UNIT-TEST UNIT-TEST UNIT-TEST UNIT-TEST UNIT-TEST UNIT-TEST UNIT-TEST
     */
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test:rules:1.1.0'
    /**
     *  UI-TEST UI-TEST UI-TEST UI-TEST UI-TEST UI-TEST UI-TEST UI-TEST UI-TEST UI-TEST UI-TEST UI-TEST UI-TEST UI-TEST
     */
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"

    // Espresso core
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0') {
        exclude group: 'com.android.support'
    }

    // Espresso-contrib for DatePicker, RecyclerView, Drawer actions, Accessibility checks, CountingIdlingResource
    androidTestImplementation('androidx.test.espresso:espresso-contrib:3.1.0') {
        exclude group: 'com.android.support'
    }
    androidTestImplementation('androidx.test.espresso:espresso-intents:3.1.0') {
        exclude group: 'com.android.support'
    }
    androidTestImplementation 'androidx.annotation:annotation:1.0.0'
}
